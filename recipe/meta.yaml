{% set name = "zope.deferredimport" %}
{% set version = "6.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name|replace(".", "_") }}-{{ version }}.tar.gz
  sha256: dcceab59470497adb1bf32051a12355cde4e7f629ae1d21ac16ba830bc717fed

build:
  number: 0
  skip: true  # [py<39]
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -vv

requirements:
  host:
    - pip
    - python
    - setuptools 78.1.1
    - wheel
  run:
    - python
    - zope.proxy

test:
  imports:
    - zope.deferredimport
  requires:
    - pip
    - pytest
  commands:
    - pip check
    - pytest -v --pyargs zope.deferredimport.tests

about:
  home: https://github.com/zopefoundation/zope.deferredimport
  license: ZPL 2.1
  license_family: OTHER
  license_file: LICENSE.txt
  summary: 'defers import to when objects are actually used'
  description: |
    Often, especially for package modules, you want to import names for
    convenience, but not actually perform the imports until necessary.
    The zope.deferredimport package provided facilities for defining
    names in modules that will be imported from somewhere else when
    used. You can also cause deprecation warnings to be issued when a
    variable is used.
  doc_url: https://zopedeferredimport.readthedocs.io/
  dev_url: https://github.com/zopefoundation/zope.deferredimport

extra:
  recipe-maintainers:
    - ChrisBarker-NOAA
    - daf
